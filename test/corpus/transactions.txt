==================
Transaction
==================

transaction {}

---

(Program
  (transactionDeclaration))

==================
Transaction Arguments
==================

transaction(amount: UFix64) {}

---

(Program
    (transactionDeclaration
    (Parameter
        (Identifier)
        (NominalType
            (TypeIdentifier
            (TypeBuiltin))))))



==================
Transaction Phases
==================

transaction {
    prepare() {
    }

    pre {
    }

    execute {
    }

    post {
    }
}

---

    (Program
      (transactionDeclaration
        (prepare
          (SpecialFunctionDeclaration
            (FunctionDeclaration_)))
        (PreConditions)
        (execute)))


==================
Transaction Prepare Phase
==================

transaction {
    prepare(signer1: &Account, signer2: &Account) {
    }
}

---

(Program
    (transactionDeclaration
    (prepare
        (SpecialFunctionDeclaration
        (FunctionDeclaration_
              (Parameter
                (Identifier)
                  (ReferenceType
                    (NominalType
                      (TypeIdentifier))))
              (Parameter
                (Identifier)
                  (ReferenceType
                    (NominalType
                      (TypeIdentifier)))))))))


==================
Transaction Prepare: authorized reference
==================

transaction {
    prepare(signer: auth(Storage) &Account) {
    }
}

---

(Program
    (transactionDeclaration
    (prepare
        (SpecialFunctionDeclaration
        (FunctionDeclaration_
            (Parameter
                (Identifier)
                (AuthorizedType
                  (Entitlements
                    (Identifier))
                  (ReferenceType
                    (NominalType
                      (TypeIdentifier))))))))))



==================
Transaction post condition
==================

transaction {
    prepare() {
    }

    post {
        signer.balance == 30.0: "Balance after transaction is incorrect!"
    }
}

---

(Program
    (transactionDeclaration
    (prepare
        (SpecialFunctionDeclaration
        (FunctionDeclaration_)))
    (Condition
        (BinaryExpressionEquality
        (MemberExpression
            (IdentifierExpression
            (Identifier))
            (Identifier))
        (EqualityOp
            (Equal))
        (FixedPointExpression
            (FixedPointLiteral)))
        (StringExpression
        (StringLiteral)))))
